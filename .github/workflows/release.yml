name: Release Workflow

on:
  push:
    branches:
      - main
      - book_of_mormon

jobs:
  build-android-bible:
    runs-on: ubuntu-latest
    environment: Bible
    steps:
      - uses: actions/checkout@v3
      - name: Create .env file
        run: |
          echo "API_KEY=${{ secrets.API_KEY }}" >> .env
          echo "DEFAULT_BOOKS_JSON=${{ secrets.DEFAULT_BOOKS_JSON }}" >> .env
          echo "ENV=${{ secrets.ENV }}" >> .env
        shell: bash
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: "stable"
      - name: Get Flutter dependencies
        run: flutter pub get
      - name: Build APK
        run: flutter build apk --release --release --flavor bible
      - name: Upload APK to Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: app-bible-release.apk
          path: build/app/outputs/apk/bible/release/app-bible-release.apk

  build-ios-bible:
    runs-on: macos-latest
    environment: Bible
    steps:
      - uses: actions/checkout@v3
      - name: Create .env file
        run: |
          echo "API_KEY=${{ secrets.API_KEY }}" >> .env
          echo "DEFAULT_BOOKS_JSON=${{ secrets.DEFAULT_BOOKS_JSON }}" >> .env
          echo "ENV=${{ secrets.ENV }}" >> .env
        shell: bash
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: "stable"
      - name: Get Flutter dependencies
        run: flutter pub get
      - name: Install CocoaPods dependencies
        run: cd ios && pod install
      - name: Build iOS IPA
        run: flutter build ipa --release --no-codesign

      - name: Zip IPA build artifacts
        run: cd build/ios && zip -r ../bible-ios-ipa.zip ./*
      - name: Upload iOS IPA to Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: bible-ios-ipa.zip
          path: build/bible-ios-ipa.zip

  build-android-bom:
    runs-on: ubuntu-latest
    environment: BookOfMormon
    steps:
      - uses: actions/checkout@v3
      - name: Create .env file
        run: |
          echo "API_KEY=${{ secrets.API_KEY }}" >> .env
          echo "DEFAULT_BOOKS_JSON=${{ secrets.DEFAULT_BOOKS_JSON }}" >> .env
          echo "ENV=${{ secrets.ENV }}" >> .env
        shell: bash
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: "stable"
      - name: Get Flutter dependencies
        run: flutter pub get
      - name: Build APK
        run: flutter build apk --release --release --flavor bom
      - name: Upload APK to Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: app-bom-release.apk
          path: build/app/outputs/apk/bom/release/app-bom-release.apk

  build-ios-bom:
    runs-on: macos-latest
    environment: BookOfMormon
    steps:
      - uses: actions/checkout@v3
      - name: Create .env file
        run: |
          echo "API_KEY=${{ secrets.API_KEY }}" >> .env
          echo "DEFAULT_BOOKS_JSON=${{ secrets.DEFAULT_BOOKS_JSON }}" >> .env
          echo "ENV=${{ secrets.ENV }}" >> .env
        shell: bash
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: "stable"
      - name: Get Flutter dependencies
        run: flutter pub get
      - name: Install CocoaPods dependencies
        run: cd ios && pod install
      - name: Build iOS IPA
        run: flutter build ipa --release --no-codesign

      - name: Zip IPA build artifacts
        run: cd build/ios && zip -r ../bom-ios-ipa.zip ./*
      - name: Upload iOS IPA to Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: bom-ios-ipa.zip
          path: build/bom-ios-ipa.zip

  create-release:
    needs:
      [build-android-bible, build-ios-bible, build-android-bom, build-ios-bom]
    outputs:
      release_name: ${{ steps.set_release_name.outputs.release_name }}
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v3
      - name: Download Bible APK Artifact
        uses: actions/download-artifact@v2
        with:
          name: app-bible-release.apk
          path: build/android/
      - name: Download Bible iOS IPA Artifact
        uses: actions/download-artifact@v2
        with:
          name: bible-ios-ipa.zip
          path: build/ios/
      - name: Download Book of Mormon APK Artifact
        uses: actions/download-artifact@v2
        with:
          name: app-bom-release.apk
          path: build/android/
      - name: Download Book of Mormon iOS IPA Artifact
        uses: actions/download-artifact@v2
        with:
          name: bom-ios-ipa.zip
          path: build/ios/
      - name: Determine release type
        id: set_release_name
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            echo "::set-output name=release_name::Major Release ${{ github.run_number }}"
          else
            echo "::set-output name=release_name::Beta Release ${{ github.run_number }}"
          fi
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.run_number }}
          release_name: ${{ needs.create-release.outputs.release_name }}
          draft: false
          prerelease: ${{ github.ref != 'refs/heads/main' }}
      - name: Upload Bible APK Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/android/app-bible-release.apk
          asset_name: app-bible-release.apk
          asset_content_type: application/vnd.android.package-archive
      - name: Upload Bible iOS IPA Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/ios/bible-ios-ipa.zip
          asset_name: bible-ios-ipa.zip
          asset_content_type: application/zip
      - name: Upload Book of Mormon APK Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/android/app-bom-release.apk
          asset_name: app-bom-release.apk
          asset_content_type: application/vnd.android.package-archive
      - name: Upload Book of Mormon iOS IPA Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/ios/bom-ios-ipa.zip
          asset_name: bom-ios-ipa.zip
          asset_content_type: application/zip
